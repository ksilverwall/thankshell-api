AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  thankshell-api

  Sample SAM Template for thankshell-api
  
Parameters:
 Environment:
   Type: String
   AllowedValues:
   - staging
   - production
   Default: staging

Mappings:
  EnvironmentMap:
    production:
      TransactionDatabase: production
    staging:
      TransactionDatabase: staging

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:

  ###############################################
  # Api

  ThankshellApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        DefaultAuthorizer: CognitoAuthorizer
        AddDefaultAuthorizerToCorsPreflight: false
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: arn:aws:cognito-idp:ap-northeast-1:027569216980:userpool/ap-northeast-1_GyRiCriHq
      Variables:
        transaction_database: !FindInMap [ EnvironmentMap, !Ref Environment, TransactionDatabase ]
      Cors:
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"
      GatewayResponses:
        UNAUTHORIZED:
          StatusCode: 401
          ResponseParameters:
            Headers:
              Access-Control-Allow-Origin: "'*'"

  ###############################################
  # Layers

  CommonLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: thankshell-libs
      Description: Common Application Resource Layer
      ContentUri: layers

  #######################################
  # Functions

  #
  # User
  #

  GetUserInfo:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get-user-info/
      Handler: index.handler
      Runtime: nodejs10.x
      Events:
        ApiTrigger:
          Type: Api
          Properties:
            Path: /user
            Method: get
            RestApiId: !Ref ThankshellApi
      Layers:
      - !Ref CommonLayer

  CreateUser:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: create-user/
      Handler: index.handler
      Runtime: nodejs10.x
      Events:
        ApiTrigger:
          Type: Api
          Properties:
            Path: /user
            Method: put
            RestApiId: !Ref ThankshellApi
      Layers:
      - !Ref CommonLayer

  #
  # Groups
  #

  GetGroupInfo:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get-group-info/
      Handler: index.handler
      Runtime: nodejs10.x
      Events:
        ApiTrigger:
          Type: Api
          Properties:
            Path: /groups/{group}
            Method: get
            RestApiId: !Ref ThankshellApi
      Layers:
      - !Ref CommonLayer

  #
  # Token publiched
  #

  GetTokenPublished:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get-token-published/
      Handler: index.handler
      Runtime: nodejs10.x
      Events:
        ApiTrigger:
          Type: Api
          Properties:
            Path: /token/{token}/published
            Method: get
            RestApiId: !Ref ThankshellApi
      Layers:
      - !Ref CommonLayer

  PublishToken:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: publish-token/
      Handler: index.handler
      Runtime: nodejs10.x
      Events:
        ApiTrigger:
          Type: Api
          Properties:
            Path: /token/{token}/published
            Method: post
            RestApiId: !Ref ThankshellApi
      Layers:
      - !Ref CommonLayer

  #
  # Token Holders
  #

  GetTokenHolders:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get-token-holders/
      Handler: index.handler
      Runtime: nodejs10.x
      Events:
        ApiTrigger:
          Type: Api
          Properties:
            Path: /token/{token}/holders
            Method: get
            RestApiId: !Ref ThankshellApi
      Layers:
      - !Ref CommonLayer

  GetTokenHoldings:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get-token-holdings/
      Handler: index.handler
      Runtime: nodejs10.x
      Events:
        ApiTrigger:
          Type: Api
          Properties:
            Path: /token/{token}/holders/{user}
            Method: get
            RestApiId: !Ref ThankshellApi
      Layers:
      - !Ref CommonLayer

  #
  # Token Transaction
  #

  GetTransactions:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get-transactions/
      Handler: index.handler
      Runtime: nodejs10.x
      Events:
        ApiTrigger:
          Type: Api
          Properties:
            Path: /token/{token}/transactions
            Method: get
            RestApiId: !Ref ThankshellApi
      Layers:
      - !Ref CommonLayer

  CreateTransaction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: create-transaction/
      Handler: index.handler
      Runtime: nodejs10.x
      Events:
        ApiTrigger:
          Type: Api
          Properties:
            Path: /token/{token}/transactions
            Method: post
            RestApiId: !Ref ThankshellApi
      Layers:
      - !Ref CommonLayer
