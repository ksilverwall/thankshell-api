const AWS = require("aws-sdk")
const dynamo = new AWS.DynamoDB.DocumentClient()

exports.getUserId = async(claims) => {
    if (claims.identities) {
        const identities = JSON.parse(claims.identities)

        const authId = identities.providerName + ':' + identities.userId
        const result = await dynamo.get({
            TableName: process.env.AUTH_TABLE_NAME,
            Key:{
                'auth_id': authId,
            },
        }).promise()

        return result.Item ? result.Item['user_id'] : null
    } else {
        return claims['cognito:username']
    }
}

exports.getUser = async(userId) => {
    if (!userId) {
        return {
            status: 'UNREGISTERED',
        }
    }

    let result = await dynamo.get({
        TableName: process.env.USERS_TABLE_NAME,
        Key:{
            'user_id': userId,
        },
    }).promise()

    if (result.Item) {
        return {
            status: result.Item.status,
            user_id: result.Item.user_id,
            displayName: result.Item.display_name ? result.Item.display_name : result.Item.user_id,
        }
    } else {
        return {
            status: 'UNREGISTERED',
            'user_id': userId,
        }
    }
}

exports.getUserInfo = async(claims) => {
    const userId = await exports.getUserId(claims)

    return await exports.getUser(userId)
}
