let appInterface = require('thankshell-libs/interface.js');
let AWS = require("aws-sdk");

const dynamo = new AWS.DynamoDB.DocumentClient();

const setMember = async(gid, members) => {
  await dynamo.update({
    TableName: process.env.GROUPS_TABLE_NAME,
    Key:{
        'group_id': gid,
    },
    UpdateExpression: 'set members = :members',
    ExpressionAttributeValues: {
        ':members': dynamo.createSet(members)
    }
  }).promise();
}

const loadMembers = async(gid) => {
  const data = await dynamo.get({
    TableName: process.env.GROUPS_TABLE_NAME,
    Key:{
        'group_id': gid,
    },
  }).promise();

  return data.Item.members.values
};

exports.addAsync = async(groupId, memberId) => {
  let members = await loadMembers(groupId)
  if (members.includes(memberId)) {
    throw new appInterface.ApplicationError(`'${memberId}' already registered`)
  }
  members.push(memberId)

  await setMember(groupId, members)
}
